server:
  port: 8082
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  application:
    name: reservation-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: root
    password: 1234
    url: r2dbc:mysql://localhost:3306/petclinic_msa
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  # message queue config
  cloud:
    function:
      definition: dispatchReservation # 스프링 클라우드 함수에 의해 관리될 함수 정의
    stream:
      bindings:
        dispatchReservation-in-0: # 입력 바인딩
          destination: reservation-dispatched # 바인더를 연결할 대상의 브로커에서의 실제 이름(RabbitMQ의 익스체인지)
          group: ${spring.application.name} # 대상을 통해 메시지를 수신할 소비자 그룹(애플리케이션 이름 사용)
        acceptReservation-out-0: # 출력 바인딩, StreamBridge에 의해 생성되고 관리됨
          destination: reservation-accepted # 바인더를 래빗MQ 익스체인지에 연결할 대상의 브로커에서의 실제 이름
      rabbit: # 스프링 클라우드 스트림 바인딩에 대한 RabbitMQ 설정
        bindings:
          acceptReservation-out-0:
            producer:
              transacted: true # acceptReservation-out-0 바인딩에 대한 트랜잭션 지원 활성화
        rabbitmq:
          host: localhost
          port: 5672
          username: guest
          password: guest
          connection-timeout: 5s

petclinic:
  vet-service-uri: "http://localhost:8080"